{"name":"AuthenticationController.java","path":"service/src/main/java/com/myhome/controllers/AuthenticationController.java","content":{"structured":{"description":"An `AuthenticationController` class that implements the `AuthenticationApi` interface. It handles login requests by calling the `login()` method of an `AuthenticationService` class, which validates and logs in a `LoginRequest` object. The controller then creates an HTTP response with custom headers containing the user ID and JWT token for authentication.","image":"<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Generated by graphviz version 2.43.0 (0)\n -->\n<!-- Title: com.myhome.controllers.AuthenticationController Pages: 1 -->\n<svg width=\"221pt\" height=\"93pt\"\n viewBox=\"0.00 0.00 221.00 93.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 89)\">\n<title>com.myhome.controllers.AuthenticationController</title>\n<!-- Node1 -->\n<g id=\"Node000001\" class=\"node\">\n<title>Node1</title>\n<g id=\"a_Node000001\"><a xlink:title=\" \">\n<polygon fill=\"#999999\" stroke=\"#666666\" points=\"213,-30 0,-30 0,0 213,0 213,-30\"/>\n<text text-anchor=\"start\" x=\"8\" y=\"-18\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">com.myhome.controllers.Authentication</text>\n<text text-anchor=\"middle\" x=\"106.5\" y=\"-7\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">Controller</text>\n</a>\n</g>\n</g>\n<!-- Node2 -->\n<g id=\"Node000002\" class=\"node\">\n<title>Node2</title>\n<g id=\"a_Node000002\"><a xlink:title=\" \">\n<polygon fill=\"white\" stroke=\"#666666\" points=\"158.5,-85 54.5,-85 54.5,-66 158.5,-66 158.5,-85\"/>\n<text text-anchor=\"middle\" x=\"106.5\" y=\"-73\" font-family=\"Helvetica,sans-Serif\" font-size=\"10.00\">AuthenticationApi</text>\n</a>\n</g>\n</g>\n<!-- Node2&#45;&gt;Node1 -->\n<g id=\"edge1_Node000001_Node000002\" class=\"edge\">\n<title>Node2&#45;&gt;Node1</title>\n<g id=\"a_edge1_Node000001_Node000002\"><a xlink:title=\" \">\n<path fill=\"none\" stroke=\"#63b8ff\" d=\"M106.5,-55.65C106.5,-47.36 106.5,-37.78 106.5,-30.11\"/>\n<polygon fill=\"#63b8ff\" stroke=\"#63b8ff\" points=\"103,-55.87 106.5,-65.87 110,-55.87 103,-55.87\"/>\n</a>\n</g>\n</g>\n</g>\n</svg>\n","items":[{"id":"f47330e0-3222-2a84-ad46-6eb19f7248b3","ancestors":[],"type":"function","description":"TODO","name":"AuthenticationController","code":"@RequiredArgsConstructor\n@RestController\npublic class AuthenticationController implements AuthenticationApi {\n\n  private final AuthenticationService authenticationService;\n\n  @Override\n  public ResponseEntity<Void> login(@Valid LoginRequest loginRequest) {\n    final AuthenticationData authenticationData = authenticationService.login(loginRequest);\n    return ResponseEntity.ok()\n        .headers(createLoginHeaders(authenticationData))\n        .build();\n  }\n\n  private HttpHeaders createLoginHeaders(AuthenticationData authenticationData) {\n    final HttpHeaders httpHeaders = new HttpHeaders();\n    httpHeaders.add(\"userId\", authenticationData.getUserId());\n    httpHeaders.add(\"token\", authenticationData.getJwtToken());\n    return httpHeaders;\n  }\n}","location":{"start":13,"insert":13,"offset":" ","indent":0},"item_type":"class","length":21},{"id":"75aa3367-c6eb-a6b7-c445-b5897217d6fd","ancestors":["f47330e0-3222-2a84-ad46-6eb19f7248b3"],"type":"function","description":"handles user authentication by calling the `loginService` to generate an authentication response, which is then returned as a `ResponseEntity`.","params":[{"name":"loginRequest","type_name":"LoginRequest","description":"логин request to be processed by the `login()` method, providing the necessary data for authentication.\n\n* `AuthenticationData authenticationData`: This is the result of the `login` function's internal logic, which is not explicitly stated in the code snippet provided.","complex_type":true}],"returns":{"type_name":"ResponseEntity","description":"a `ResponseEntity` object with an `OK` status and custom headers containing authentication data.\n\n* `ResponseEntity`: This is an instance of `ResponseEntity`, which is a generic class that represents a response entity in Spring WebFlux. It contains a `body` property that can be set to any type that implements `HttpEntity`.\n* `ok()` method: This is a static method on the `ResponseEntity` class that returns a `ResponseEntity` instance with a status code of 200 (OK).\n* `headers()` method: This is another static method on the `ResponseEntity` class that allows you to set custom headers on the response. In this case, the `headers()` method is called with an instance of `HttpHeaders`, which contains various header fields such as `Content-Type`, `Set-Cookie`, and `Expires`.\n* `build()` method: This is a factory method on the `ResponseEntity` class that creates a new instance of the response entity based on the properties specified in its constructor. In this case, the `build()` method takes an instance of `AuthenticationData` as a parameter and uses it to create a new instance of `ResponseEntity` with the appropriate headers and status code.","complex_type":true},"usage":{"language":"java","code":"LoginRequest request = new LoginRequest(\"test\", \"password\");\nResponseEntity<Void> response = authenticationService.login(request);\n","description":""},"name":"login","code":"@Override\n  public ResponseEntity<Void> login(@Valid LoginRequest loginRequest) {\n    final AuthenticationData authenticationData = authenticationService.login(loginRequest);\n    return ResponseEntity.ok()\n        .headers(createLoginHeaders(authenticationData))\n        .build();\n  }","location":{"start":19,"insert":19,"offset":" ","indent":2},"item_type":"method","length":7},{"id":"bcbf469c-d436-70ac-574e-a6859a9b377f","ancestors":["f47330e0-3222-2a84-ad46-6eb19f7248b3"],"type":"function","description":"creates HTTP headers with user ID and JWT token obtained from the `AuthenticationData` object passed as a parameter.","params":[{"name":"authenticationData","type_name":"AuthenticationData","description":"user's login information, providing the user ID and JWT token used for authentication.\n\n* `getUserId()`: retrieves the user ID from the input data.\n* `getJwtToken()`: retrieves the JWT token from the input data.","complex_type":true}],"returns":{"type_name":"HttpHeaders","description":"an HTTP headers object containing the user ID and JWT token of the authenticated user.\n\n* `HttpHeaders`: This is an instance of the `HttpHeaders` class in Java, which is a map of headers that can be added to an HTTP request or response.\n* `userId`: This is an integer value that represents the user ID of the authenticated user.\n* `token`: This is a string value that represents the JWT token issued to the user for authentication purposes.","complex_type":true},"usage":{"language":"java","code":"private void loginUser() {\n    final LoginRequest loginRequest = new LoginRequest(\"user@example.com\", \"password\");\n    final AuthenticationData authenticationData = authenticationService.login(loginRequest);\n    final HttpHeaders httpHeaders = createLoginHeaders(authenticationData);\n}\n","description":"\nIn this example, we are creating a new instance of the LoginRequest class with two parameters: an email address and a password. We then call the login method on the authenticationService object and pass in the login request as an argument. Finally, we assign the response to the AuthenticationData object and create a new HttpHeaders object using the createLoginHeaders method."},"name":"createLoginHeaders","code":"private HttpHeaders createLoginHeaders(AuthenticationData authenticationData) {\n    final HttpHeaders httpHeaders = new HttpHeaders();\n    httpHeaders.add(\"userId\", authenticationData.getUserId());\n    httpHeaders.add(\"token\", authenticationData.getJwtToken());\n    return httpHeaders;\n  }","location":{"start":27,"insert":27,"offset":" ","indent":2},"item_type":"method","length":6}]}}}
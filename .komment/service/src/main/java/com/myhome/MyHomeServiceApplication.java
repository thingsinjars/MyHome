{"name":"MyHomeServiceApplication.java","path":"service/src/main/java/com/myhome/MyHomeServiceApplication.java","content":{"structured":{"description":"A Spring Boot application that uses Spring Security for password encryption and configuration properties scanning. The application includes a main class with a static method `main` that runs the application when executed. Additionally, it defines a `PasswordEncoder` bean that uses the BCrypt Password Encoder to encrypt passwords.","items":[{"id":"95461843-d622-09ba-e743-a8543bd01e57","ancestors":[],"type":"function","description":"TODO","name":"MyHomeServiceApplication","code":"@SpringBootApplication\n@ConfigurationPropertiesScan\npublic class MyHomeServiceApplication {\n\n  public static void main(String[] args) {\n    SpringApplication.run(MyHomeServiceApplication.class, args);\n  }\n\n  @Bean\n  public PasswordEncoder getPasswordEncoder() {\n    return new BCryptPasswordEncoder();\n  }\n}","location":{"start":26,"insert":26,"offset":" ","indent":0},"item_type":"class","length":13},{"id":"a0c56a30-b852-24b4-0c4b-8ff1af4a1ab3","ancestors":["95461843-d622-09ba-e743-a8543bd01e57"],"type":"function","description":"runs a Spring application instance of `MyHomeServiceApplication`.","params":[{"name":"args","type_name":"String[]","description":"command-line arguments passed to the `SpringApplication.run()` method when executing the application.\n\n* `args`: An array of strings representing command-line arguments passed to the application. Each string in the array represents an individual argument.","complex_type":true}],"usage":{"language":"java","code":"public static void main(String[] args) {\n    SpringApplication.run(MyHomeServiceApplication.class, args);\n}\n","description":""},"name":"main","code":"public static void main(String[] args) {\n    SpringApplication.run(MyHomeServiceApplication.class, args);\n  }","location":{"start":30,"insert":30,"offset":" ","indent":2},"item_type":"method","length":3},{"id":"9e61efb7-e2fb-068f-d74d-318c0be4334d","ancestors":["95461843-d622-09ba-e743-a8543bd01e57"],"type":"function","description":"returns a `BCryptPasswordEncoder` instance, which is a widely-used password hashing algorithm that provides strong security against brute force attacks.","params":[],"returns":{"type_name":"BCryptPasswordEncoder","description":"a BCryptPasswordEncoder object, which is used to encrypt passwords securely.\n\nThe PasswordEncoder object returned is an instance of BCryptPasswordEncoder, which is a secure password hashing algorithm. This class provides password encryption using the bcrypt algorithm, which is more secure than the traditional MD5 or SHA-256 hash functions. It also includes features like salt generation and incremental hashing to improve security.\n\nThe BCryptPasswordEncoder instance returned can be used to encrypt passwords by calling its encode() method, passing in the password to be encrypted as a string argument. The resulting encoded password is a secure representation of the original password that can be stored or compared for authentication purposes.","complex_type":true},"usage":{"language":"java","code":"@Autowired PasswordEncoder passwordEncoder;\n\nString password = \"password\";\nString encodedPassword = passwordEncoder.encode(password);\n","description":""},"name":"getPasswordEncoder","code":"@Bean\n  public PasswordEncoder getPasswordEncoder() {\n    return new BCryptPasswordEncoder();\n  }","location":{"start":34,"insert":34,"offset":" ","indent":2},"item_type":"method","length":4}]}}}
[
  {
    "name": "AuthenticationController.java",
    "path": "service/src/main/java/com/myhome/controllers/AuthenticationController.java",
    "content": {
      "structured": {
        "description": "An `AuthenticationController` class that acts as a RESTful API for authentication purposes. The controller receives a `LoginRequest` object from the client and passes it to an `AuthenticationService` implementation for processing. Once the authentication is successful, the controller creates and returns a `ResponseEntity` object with the user ID and JWT token in the HTTP headers.",
        "items": [
          {
            "id": "67b31248-bfd1-d99c-3341-ecaa02e883c7",
            "ancestors": [],
            "type": "function",
            "description": "Is a Spring REST controller that implements the AuthenticationApi interface. It provides a login method that takes a valid LoginRequest object as input and returns a ResponseEntity with the user ID and JWT token in the HTTP headers. The class also includes a private method for creating the HTTP headers based on the returned AuthenticationData object.",
            "name": "AuthenticationController",
            "location": {
              "start": 13,
              "insert": 13,
              "offset": " ",
              "indent": 0,
              "comment": null
            },
            "item_type": "class",
            "length": 21,
            "docLength": null
          },
          {
            "id": "5620b936-01c1-8896-c845-4de7296520b1",
            "ancestors": [
              "67b31248-bfd1-d99c-3341-ecaa02e883c7"
            ],
            "type": "function",
            "description": "Authenticates a user by calling the `loginService` and returning an `ResponseEntity` with the authentication data.",
            "params": [
              {
                "name": "loginRequest",
                "type_name": "LoginRequest",
                "description": "user's login details, containing the username and password for authentication by the `authenticationService`.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "ResponseEntity",
              "description": "a `ResponseEntity` object with an `OK` status and headers containing authentication data.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "@Test\npublic void testLogin() {\n    LoginRequest request = new LoginRequest(\"example@gmail.com\", \"password\");\n    ResponseEntity<Void> response = authenticationController.login(request);\n    assertEquals(HttpStatus.OK, response.getStatusCode());\n}\n",
              "description": ""
            },
            "name": "login",
            "location": {
              "start": 19,
              "insert": 19,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 7,
            "docLength": null
          },
          {
            "id": "e6898b37-54cd-c09b-8141-f29d241a8dd6",
            "ancestors": [
              "67b31248-bfd1-d99c-3341-ecaa02e883c7"
            ],
            "type": "function",
            "description": "Creates HTTP headers with user ID and JWT token for login purposes based on input `AuthenticationData`.",
            "params": [
              {
                "name": "authenticationData",
                "type_name": "AuthenticationData",
                "description": "user's login information, providing the user ID and JWT token for authentication purposes.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "HttpHeaders",
              "description": "a set of HTTP headers containing the user ID and JWT token for authentication purposes.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "public void exampleMethod() {\n    final AuthenticationData authenticationData = new AuthenticationData(\"userId\", \"jwtToken\");\n    HttpHeaders headers = createLoginHeaders(authenticationData);\n}\n",
              "description": ""
            },
            "name": "createLoginHeaders",
            "location": {
              "start": 27,
              "insert": 27,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 6,
            "docLength": null
          }
        ]
      }
    }
  },
  {
    "name": "UserController.java",
    "path": "service/src/main/java/com/myhome/controllers/UserController.java",
    "content": {
      "structured": {
        "description": "A UserController class that implements UsersApi interface. It provides multiple endpoints for handling user-related actions such as signing up, listing users, getting user details, resetting passwords and confirming email. The controller uses various services like UserService, HouseService and UserApiMapper to perform these actions.",
        "diagram": {
          "gviz": "digraph G {\n    bgcolor=\"#151719\"\n    fontcolor=\"#ECEDED\"\n    splines=ortho\n    fontname=\"Courier New\"\n    edge [color=\"#26de81\"]\n    node [style=filled,color=\"#717D86\", shape=rectangle, fontname=\"Courier New\"]\n    \n    subgraph cluster_2 {\n        label=\"org/springframework\"\n        color=\"#33363A\"\n        ResponseEntity [label=\"org.springframework.http.ResponseEntity\", style=\"rounded,filled\"]\n        HttpStatus [label=\"org.springframework.http.HttpStatus\", style=\"rounded,filled\"]\n        subgraph cluster_4 {\n            label=\"web/bind\"\n            color=\"#33363A\"\n            RestController [label=\"org.springframework.web.bind.annotation.RestController\", style=\"rounded,filled\"]\n            RequestBody [label=\"org.springframework.web.bind.annotation.RequestBody\", style=\"rounded,filled\"]\n        }\n        subgraph cluster_5 {\n            label=\"data\"\n            color=\"#33363A\"\n            Pageable [label=\"org.springframework.data.domain.Pageable\", style=\"rounded,filled\"]\n        }\n    }\n    subgraph cluster_6 {\n        label=\"javax\"\n        color=\"#33363A\"\n        Valid [label=\"javax.validation.Valid\", style=\"rounded,filled\"]\n        subgraph cluster_7 {\n            label=\"validation\"\n            color=\"#33363A\"\n            NotNull [label=\"javax.validation.constraints.NotNull\", style=\"rounded,filled\"]\n        }\n    }\n    subgraph cluster_9 {\n        label=\"com/myhome\"\n        color=\"#33363A\"\n        GetUserDetailsResponse [label=\"com.myhome.model.GetUserDetailsResponse\", style=\"rounded,filled\"]\n        PasswordActionType []\n        ListHouseMembersResponse [label=\"com.myhome.model.ListHouseMembersResponse\", style=\"rounded,filled\"]\n        subgraph cluster_main {\n            // style=filled\n            color=\"#00000000\"\n            UserController [] [fontsize=\"20pt\",style=filled,color=\"#26de81\",shape=square, fontname=\"Courier New\"]\n            label = \"\"\n        }\n        GetUserDetailsResponseUser [label=\"com.myhome.model.GetUserDetailsResponseUser\", style=\"rounded,filled\"]\n        User []\n        UserService []\n        HouseService []\n        CreateUserRequest [label=\"com.myhome.model.CreateUserRequest\", style=\"rounded,filled\"]\n        UsersApi [label=\"com.myhome.api.UsersApi\", style=\"rounded,filled\"]\n        subgraph cluster_10 {\n            label=\"controllers\"\n            color=\"#33363A\"\n            UserApiMapper []\n            ForgotPasswordRequest []\n            CreateUserResponse []\n            UserDto []\n            subgraph cluster_11 {\n                label=\"dto\"\n                color=\"#33363A\"\n                HouseMemberMapper []\n            }\n        }\n    }\n    subgraph cluster_13 {\n        label=\"lombok/extern\"\n        color=\"#33363A\"\n        Slf4j [label=\"lombok.extern.slf4j.Slf4j\", style=\"rounded,filled\"]\n    }\n    subgraph cluster_14 {\n        label=\"java\"\n        color=\"#33363A\"\n        HashSet [label=\"java.util.HashSet\", style=\"rounded,filled\"]\n        Optional [label=\"java.util.Optional\", style=\"rounded,filled\"]\n        Set [label=\"java.util.Set\", style=\"rounded,filled\"]\n    }\n    RequiredArgsConstructor [label=\"lombok.RequiredArgsConstructor\", style=\"rounded,filled\"]\n    UserController -> CreateUserResponse [style=\"dashed\"]\n    UserController -> GetUserDetailsResponseUser [style=\"dashed\"]\n    UserController -> PasswordActionType [style=\"dashed\"]\n    UserController -> ResponseEntity [style=\"dashed\"]\n    UserController -> RequestBody [style=\"dashed\"]\n    UserController -> CreateUserRequest [style=\"dashed\"]\n    UserController -> Optional [style=\"dashed\"]\n    UserController -> Valid [style=\"dashed\"]\n    UserController -> GetUserDetailsResponse [style=\"dashed\"]\n    UserController -> CreateUserResponse [penwidth=1]\n    Pageable -> UserController [penwidth=2]\n    CreateUserRequest -> UserController [penwidth=1]\n    UserController -> HashSet [style=\"dashed\"]\n    UserController -> HttpStatus [style=\"dashed\"]\n    UserController -> RequiredArgsConstructor [style=\"dashed\"]\n    UserController -> Set [style=\"dashed\"]\n    UserController -> Slf4j [style=\"dashed\"]\n    UserController -> UserDto [style=\"dashed\"]\n    UserController -> ForgotPasswordRequest [style=\"dashed\"]\n    UserController -> UsersApi [style=\"dashed\"]\n    UserController -> Pageable [style=\"dashed\"]\n    UserController -> GetUserDetailsResponse [penwidth=1]\n    UserController -> ListHouseMembersResponse [penwidth=1]\n    UserController -> HouseService [style=\"dashed\"]\n    UserController -> NotNull [style=\"dashed\"]\n    UserController -> HouseMemberMapper [style=\"dashed\"]\n    UserController -> RestController [style=\"dashed\"]\n    UserController -> UserApiMapper [style=\"dashed\"]\n    UserController -> User [style=\"dashed\"]\n    UserController -> GetUserDetailsResponseUser [penwidth=1]\n    ForgotPasswordRequest -> UserController [penwidth=1]\n    UserController -> ListHouseMembersResponse [style=\"dashed\"]\n    UserController -> UserService [style=\"dashed\"]\n}\n",
          "d2": "<?xml version=\"1.0\" encoding=\"utf-8\"?><svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" d2Version=\"v0.6.5\" preserveAspectRatio=\"xMinYMin meet\" viewBox=\"0 0 4331 3911\"><svg id=\"d2-svg\" class=\"d2-1487222559\" width=\"4331\" height=\"3911\" viewBox=\"11 11 4331 3911\"><rect x=\"11.000000\" y=\"11.000000\" width=\"4331.000000\" height=\"3911.000000\" rx=\"0.000000\" fill=\"#151719\" stroke-width=\"0\" /><style type=\"text/css\"><![CDATA[\n.d2-1487222559 .text {\n\tfont-family: \"d2-1487222559-font-regular\";\n}\n@font-face {\n\tfont-family: d2-1487222559-font-regular;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-1487222559 .text-italic {\n\tfont-family: \"d2-1487222559-font-italic\";\n}\n@font-face {\n\tfont-family: d2-1487222559-font-italic;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-1487222559 .text-mono {\n\tfont-family: \"d2-1487222559-font-mono\";\n}\n@font-face {\n\tfont-family: d2-1487222559-font-mono;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}\n.d2-1487222559 .text-mono-bold {\n\tfont-family: \"d2-1487222559-font-mono-bold\";\n}\n@font-face {\n\tfont-family: d2-1487222559-font-mono-bold;\n\tsrc: url(\"data:application/font-woff;base64,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\");\n}]]></style><style type=\"text/css\"><![CDATA[.shape {\n  shape-rendering: geometricPrecision;\n  stroke-linejoin: round;\n}\n.connection {\n  stroke-linecap: round;\n  stroke-linejoin: round;\n}\n.blend {\n  mix-blend-mode: multiply;\n  opacity: 0.5;\n}\n\n\t\t.d2-1487222559 .fill-N1{fill:#ECEDED;}\n\t\t.d2-1487222559 .fill-N2{fill:#676C7E;}\n\t\t.d2-1487222559 .fill-N3{fill:#9499AB;}\n\t\t.d2-1487222559 .fill-N4{fill:#CFD2DD;}\n\t\t.d2-1487222559 .fill-N5{fill:#DEE1EB;}\n\t\t.d2-1487222559 .fill-N6{fill:#EEF1F8;}\n\t\t.d2-1487222559 .fill-N7{fill:#151719;}\n\t\t.d2-1487222559 .fill-B1{fill:#717D86;}\n\t\t.d2-1487222559 .fill-B2{fill:#717D86;}\n\t\t.d2-1487222559 .fill-B3{fill:#ffff00;}\n\t\t.d2-1487222559 .fill-B4{fill:#151719;}\n\t\t.d2-1487222559 .fill-B5{fill:#151719;}\n\t\t.d2-1487222559 .fill-B6{fill:#151719;}\n\t\t.d2-1487222559 .fill-AA2{fill:#ECEDED;}\n\t\t.d2-1487222559 .fill-AA4{fill:#CFD2DD;}\n\t\t.d2-1487222559 .fill-AA5{fill:#DEE1EB;}\n\t\t.d2-1487222559 .fill-AB4{fill:#CFD2DD;}\n\t\t.d2-1487222559 .fill-AB5{fill:#DEE1EB;}\n\t\t.d2-1487222559 .stroke-N1{stroke:#ECEDED;}\n\t\t.d2-1487222559 .stroke-N2{stroke:#676C7E;}\n\t\t.d2-1487222559 .stroke-N3{stroke:#9499AB;}\n\t\t.d2-1487222559 .stroke-N4{stroke:#CFD2DD;}\n\t\t.d2-1487222559 .stroke-N5{stroke:#DEE1EB;}\n\t\t.d2-1487222559 .stroke-N6{stroke:#EEF1F8;}\n\t\t.d2-1487222559 .stroke-N7{stroke:#151719;}\n\t\t.d2-1487222559 .stroke-B1{stroke:#717D86;}\n\t\t.d2-1487222559 .stroke-B2{stroke:#717D86;}\n\t\t.d2-1487222559 .stroke-B3{stroke:#ffff00;}\n\t\t.d2-1487222559 .stroke-B4{stroke:#151719;}\n\t\t.d2-1487222559 .stroke-B5{stroke:#151719;}\n\t\t.d2-1487222559 .stroke-B6{stroke:#151719;}\n\t\t.d2-1487222559 .stroke-AA2{stroke:#ECEDED;}\n\t\t.d2-1487222559 .stroke-AA4{stroke:#CFD2DD;}\n\t\t.d2-1487222559 .stroke-AA5{stroke:#DEE1EB;}\n\t\t.d2-1487222559 .stroke-AB4{stroke:#CFD2DD;}\n\t\t.d2-1487222559 .stroke-AB5{stroke:#DEE1EB;}\n\t\t.d2-1487222559 .background-color-N1{background-color:#ECEDED;}\n\t\t.d2-1487222559 .background-color-N2{background-color:#676C7E;}\n\t\t.d2-1487222559 .background-color-N3{background-color:#9499AB;}\n\t\t.d2-1487222559 .background-color-N4{background-color:#CFD2DD;}\n\t\t.d2-1487222559 .background-color-N5{background-color:#DEE1EB;}\n\t\t.d2-1487222559 .background-color-N6{background-color:#EEF1F8;}\n\t\t.d2-1487222559 .background-color-N7{background-color:#151719;}\n\t\t.d2-1487222559 .background-color-B1{background-color:#717D86;}\n\t\t.d2-1487222559 .background-color-B2{background-color:#717D86;}\n\t\t.d2-1487222559 .background-color-B3{background-color:#ffff00;}\n\t\t.d2-1487222559 .background-color-B4{background-color:#151719;}\n\t\t.d2-1487222559 .background-color-B5{background-color:#151719;}\n\t\t.d2-1487222559 .background-color-B6{background-color:#151719;}\n\t\t.d2-1487222559 .background-color-AA2{background-color:#ECEDED;}\n\t\t.d2-1487222559 .background-color-AA4{background-color:#CFD2DD;}\n\t\t.d2-1487222559 .background-color-AA5{background-color:#DEE1EB;}\n\t\t.d2-1487222559 .background-color-AB4{background-color:#CFD2DD;}\n\t\t.d2-1487222559 .background-color-AB5{background-color:#DEE1EB;}\n\t\t.d2-1487222559 .color-N1{color:#ECEDED;}\n\t\t.d2-1487222559 .color-N2{color:#676C7E;}\n\t\t.d2-1487222559 .color-N3{color:#9499AB;}\n\t\t.d2-1487222559 .color-N4{color:#CFD2DD;}\n\t\t.d2-1487222559 .color-N5{color:#DEE1EB;}\n\t\t.d2-1487222559 .color-N6{color:#EEF1F8;}\n\t\t.d2-1487222559 .color-N7{color:#151719;}\n\t\t.d2-1487222559 .color-B1{color:#717D86;}\n\t\t.d2-1487222559 .color-B2{color:#717D86;}\n\t\t.d2-1487222559 .color-B3{color:#ffff00;}\n\t\t.d2-1487222559 .color-B4{color:#151719;}\n\t\t.d2-1487222559 .color-B5{color:#151719;}\n\t\t.d2-1487222559 .color-B6{color:#151719;}\n\t\t.d2-1487222559 .color-AA2{color:#ECEDED;}\n\t\t.d2-1487222559 .color-AA4{color:#CFD2DD;}\n\t\t.d2-1487222559 .color-AA5{color:#DEE1EB;}\n\t\t.d2-1487222559 .color-AB4{color:#CFD2DD;}\n\t\t.d2-1487222559 .color-AB5{color:#DEE1EB;}.appendix text.text{fill:#ECEDED}.md{--color-fg-default:#ECEDED;--color-fg-muted:#676C7E;--color-fg-subtle:#9499AB;--color-canvas-default:#151719;--color-canvas-subtle:#EEF1F8;--color-border-default:#717D86;--color-border-muted:#717D86;--color-neutral-muted:#EEF1F8;--color-accent-fg:#717D86;--color-accent-emphasis:#717D86;--color-attention-subtle:#676C7E;--color-danger-fg:red;}.sketch-overlay-B1{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-B3{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-B4{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B5{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-B6{fill:url(#streaks-darker);mix-blend-mode:lighten}.sketch-overlay-AA2{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AA4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AA5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-AB4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-AB5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N1{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N2{fill:url(#streaks-dark);mix-blend-mode:overlay}.sketch-overlay-N3{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N4{fill:url(#streaks-normal);mix-blend-mode:color-burn}.sketch-overlay-N5{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N6{fill:url(#streaks-bright);mix-blend-mode:darken}.sketch-overlay-N7{fill:url(#streaks-darker);mix-blend-mode:lighten}.light-code{display: block}.dark-code{display: none}]]></style><g id=\"com\"><g class=\"shape\" ><rect x=\"1468.000000\" y=\"57.000000\" width=\"2873.000000\" height=\"2888.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"2904.500000\" y=\"90.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">com</text></g><g id=\"java\"><g class=\"shape\" ><rect x=\"52.000000\" y=\"3285.000000\" width=\"547.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"325.500000\" y=\"3318.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">java</text></g><g id=\"javax\"><g class=\"shape\" ><rect x=\"2984.000000\" y=\"3285.000000\" width=\"524.000000\" height=\"376.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"3246.000000\" y=\"3318.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">javax</text></g><g id=\"lombok\"><g class=\"shape\" ><rect x=\"619.000000\" y=\"3285.000000\" width=\"677.000000\" height=\"376.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"957.500000\" y=\"3318.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">lombok</text></g><g id=\"org\"><g class=\"shape\" ><rect x=\"1316.000000\" y=\"3285.000000\" width=\"1648.000000\" height=\"591.000000\" class=\" stroke-B1 fill-B4\" style=\"stroke-width:2;\" /></g><text x=\"2140.000000\" y=\"3318.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:28px\">org</text></g><g id=\"com.myhome\"><g class=\"shape\" ><rect x=\"1518.000000\" y=\"112.000000\" width=\"2773.000000\" height=\"2778.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"2904.500000\" y=\"141.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">myhome</text></g><g id=\"java.util\"><g class=\"shape\" ><rect x=\"102.000000\" y=\"3340.000000\" width=\"447.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"325.500000\" y=\"3369.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">util</text></g><g id=\"javax.validation\"><g class=\"shape\" ><rect x=\"3034.000000\" y=\"3340.000000\" width=\"424.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"3246.000000\" y=\"3369.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">validation</text></g><g id=\"lombok.RequiredArgsConstructor\"><g class=\"shape\" ><rect x=\"669.000000\" y=\"3340.000000\" width=\"265.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"801.500000\" y=\"3378.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">RequiredArgsConstructor</text></g><g id=\"lombok.extern\"><g class=\"shape\" ><rect x=\"954.000000\" y=\"3340.000000\" width=\"292.000000\" height=\"271.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"1100.000000\" y=\"3369.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">extern</text></g><g id=\"org.springframework\"><g class=\"shape\" ><rect x=\"1366.000000\" y=\"3340.000000\" width=\"1548.000000\" height=\"481.000000\" class=\" stroke-B1 fill-B5\" style=\"stroke-width:2;\" /></g><text x=\"2140.000000\" y=\"3369.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:24px\">springframework</text></g><g id=\"com.myhome.controllers\"><g class=\"shape\" ><rect x=\"1568.000000\" y=\"247.000000\" width=\"2343.000000\" height=\"1702.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"2739.500000\" y=\"272.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">controllers</text></g><g id=\"com.myhome.api\"><g class=\"shape\" ><rect x=\"1881.000000\" y=\"2589.000000\" width=\"220.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"1991.000000\" y=\"2614.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">api</text></g><g id=\"com.myhome.domain\"><g class=\"shape\" ><rect x=\"2121.000000\" y=\"2589.000000\" width=\"419.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"2330.500000\" y=\"2614.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">domain</text></g><g id=\"com.myhome.model\"><g class=\"shape\" ><rect x=\"2560.000000\" y=\"2589.000000\" width=\"1192.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"3156.000000\" y=\"2614.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">model</text></g><g id=\"com.myhome.services\"><g class=\"shape\" ><rect x=\"3772.000000\" y=\"2589.000000\" width=\"428.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"3986.000000\" y=\"2614.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">services</text></g><g id=\"java.util.HashSet\"><g class=\"shape\" ><rect x=\"152.000000\" y=\"3390.000000\" width=\"111.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"207.500000\" y=\"3428.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">HashSet</text></g><g id=\"java.util.Optional\"><g class=\"shape\" ><rect x=\"283.000000\" y=\"3390.000000\" width=\"122.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"344.000000\" y=\"3428.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Optional</text></g><g id=\"java.util.Set\"><g class=\"shape\" ><rect x=\"425.000000\" y=\"3390.000000\" width=\"74.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"462.000000\" y=\"3428.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Set</text></g><g id=\"javax.validation.Valid\"><g class=\"shape\" ><rect x=\"3084.000000\" y=\"3395.000000\" width=\"93.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3130.500000\" y=\"3433.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Valid</text></g><g id=\"lombok.extern.slf4j\"><g class=\"shape\" ><rect x=\"1004.000000\" y=\"3395.000000\" width=\"192.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"1100.000000\" y=\"3420.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">slf4j</text></g><g id=\"org.springframework.data\"><g class=\"shape\" ><rect x=\"1416.000000\" y=\"3442.000000\" width=\"321.000000\" height=\"276.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"1576.500000\" y=\"3467.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">data</text></g><g id=\"org.springframework.http\"><g class=\"shape\" ><rect x=\"1757.000000\" y=\"3395.000000\" width=\"439.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"1976.500000\" y=\"3420.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">http</text></g><g id=\"org.springframework.web\"><g class=\"shape\" ><rect x=\"2216.000000\" y=\"3395.000000\" width=\"648.000000\" height=\"376.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"2540.000000\" y=\"3420.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">web</text></g><g id=\"javax.validation.constraints\"><g class=\"shape\" ><rect x=\"3197.000000\" y=\"3395.000000\" width=\"211.000000\" height=\"166.000000\" class=\" stroke-B1 fill-B6\" style=\"stroke-width:2;\" /></g><text x=\"3302.500000\" y=\"3420.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:20px\">constraints</text></g><g id=\"com.myhome.controllers.UserController\"><g class=\"shape\" ><rect x=\"1618.000000\" y=\"297.000000\" width=\"1200.000000\" height=\"66.000000\" fill=\"#26de81\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2218.000000\" y=\"335.500000\" fill=\"#151719\" class=\"text-mono-bold\" style=\"text-anchor:middle;font-size:16px\">UserController</text></g><g id=\"com.myhome.api.UsersApi\"><g class=\"shape\" ><rect x=\"1931.000000\" y=\"2639.000000\" width=\"120.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1991.000000\" y=\"2677.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">UsersApi</text></g><g id=\"com.myhome.controllers.dto\"><g class=\"shape\" ><rect x=\"2219.000000\" y=\"1548.000000\" width=\"538.000000\" height=\"271.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"2488.000000\" y=\"1569.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">dto</text></g><g id=\"com.myhome.controllers.mapper\"><g class=\"shape\" ><rect x=\"2838.000000\" y=\"1548.000000\" width=\"269.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"2972.500000\" y=\"1569.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">mapper</text></g><g id=\"com.myhome.domain.PasswordActionType\"><g class=\"shape\" ><rect x=\"2171.000000\" y=\"2639.000000\" width=\"217.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2279.500000\" y=\"2677.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">PasswordActionType</text></g><g id=\"com.myhome.domain.User\"><g class=\"shape\" ><rect x=\"2408.000000\" y=\"2639.000000\" width=\"82.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2449.000000\" y=\"2677.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">User</text></g><g id=\"com.myhome.model.CreateUserRequest\"><g class=\"shape\" ><rect x=\"2610.000000\" y=\"2639.000000\" width=\"208.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2714.000000\" y=\"2677.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">CreateUserRequest</text></g><g id=\"com.myhome.controllers.response\"><g class=\"shape\" ><rect x=\"3127.000000\" y=\"1548.000000\" width=\"318.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"3286.000000\" y=\"1569.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">response</text></g><g id=\"com.myhome.controllers.request\"><g class=\"shape\" ><rect x=\"3465.000000\" y=\"1548.000000\" width=\"345.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"3637.500000\" y=\"1569.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">request</text></g><g id=\"com.myhome.model.GetUserDetailsResponse\"><g class=\"shape\" ><rect x=\"2838.000000\" y=\"2639.000000\" width=\"256.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2966.000000\" y=\"2677.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GetUserDetailsResponse</text></g><g id=\"com.myhome.model.GetUserDetailsResponseUser\"><g class=\"shape\" ><rect x=\"3114.000000\" y=\"2639.000000\" width=\"294.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"3261.000000\" y=\"2677.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">GetUserDetailsResponseUser</text></g><g id=\"com.myhome.model.ListHouseMembersResponse\"><g class=\"shape\" ><rect x=\"3428.000000\" y=\"2639.000000\" width=\"274.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"3565.000000\" y=\"2677.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ListHouseMembersResponse</text></g><g id=\"com.myhome.services.HouseService\"><g class=\"shape\" ><rect x=\"3822.000000\" y=\"2639.000000\" width=\"159.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"3901.500000\" y=\"2677.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">HouseService</text></g><g id=\"com.myhome.services.UserService\"><g class=\"shape\" ><rect x=\"4001.000000\" y=\"2639.000000\" width=\"149.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"4075.500000\" y=\"2677.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">UserService</text></g><g id=\"lombok.extern.slf4j.Slf4j\"><g class=\"shape\" ><rect x=\"1054.000000\" y=\"3445.000000\" width=\"92.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1100.000000\" y=\"3483.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Slf4j</text></g><g id=\"org.springframework.data.domain\"><g class=\"shape\" ><rect x=\"1466.000000\" y=\"3497.000000\" width=\"221.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"1576.500000\" y=\"3518.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">domain</text></g><g id=\"org.springframework.http.HttpStatus\"><g class=\"shape\" ><rect x=\"1807.000000\" y=\"3445.000000\" width=\"140.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"1877.000000\" y=\"3483.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">HttpStatus</text></g><g id=\"org.springframework.http.ResponseEntity\"><g class=\"shape\" ><rect x=\"1967.000000\" y=\"3445.000000\" width=\"179.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2056.500000\" y=\"3483.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ResponseEntity</text></g><g id=\"org.springframework.web.bind\"><g class=\"shape\" ><rect x=\"2266.000000\" y=\"3450.000000\" width=\"548.000000\" height=\"271.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"2540.000000\" y=\"3471.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">bind</text></g><g id=\"javax.validation.constraints.NotNull\"><g class=\"shape\" ><rect x=\"3247.000000\" y=\"3445.000000\" width=\"111.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"3302.500000\" y=\"3483.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">NotNull</text></g><g id=\"com.myhome.controllers.dto.UserDto\"><g class=\"shape\" ><rect x=\"2269.000000\" y=\"1603.000000\" width=\"111.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2324.500000\" y=\"1641.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">UserDto</text></g><g id=\"com.myhome.controllers.dto.mapper\"><g class=\"shape\" ><rect x=\"2400.000000\" y=\"1603.000000\" width=\"307.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"2553.500000\" y=\"1624.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">mapper</text></g><g id=\"com.myhome.controllers.mapper.UserApiMapper\"><g class=\"shape\" ><rect x=\"2888.000000\" y=\"1598.000000\" width=\"169.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2972.500000\" y=\"1636.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">UserApiMapper</text></g><g id=\"com.myhome.controllers.response.CreateUserResponse\"><g class=\"shape\" ><rect x=\"3177.000000\" y=\"1598.000000\" width=\"218.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"3286.000000\" y=\"1636.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">CreateUserResponse</text></g><g id=\"com.myhome.controllers.request.ForgotPasswordRequest\"><g class=\"shape\" ><rect x=\"3515.000000\" y=\"1598.000000\" width=\"245.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"3637.500000\" y=\"1636.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">ForgotPasswordRequest</text></g><g id=\"org.springframework.data.domain.Pageable\"><g class=\"shape\" ><rect x=\"1516.000000\" y=\"3547.000000\" width=\"121.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"1576.500000\" y=\"3585.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">Pageable</text></g><g id=\"org.springframework.web.bind.annotation\"><g class=\"shape\" ><rect x=\"2316.000000\" y=\"3505.000000\" width=\"448.000000\" height=\"166.000000\" class=\" stroke-B1 fill-N7\" style=\"stroke-width:2;\" /></g><text x=\"2540.000000\" y=\"3526.000000\" class=\"text fill-N1\" style=\"text-anchor:middle;font-size:16px\">annotation</text></g><g id=\"com.myhome.controllers.dto.mapper.HouseMemberMapper\"><g class=\"shape\" ><rect x=\"2450.000000\" y=\"1653.000000\" width=\"207.000000\" height=\"66.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:0;\" /></g><text x=\"2553.500000\" y=\"1691.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">HouseMemberMapper</text></g><g id=\"org.springframework.web.bind.annotation.RequestBody\"><g class=\"shape\" ><rect x=\"2366.000000\" y=\"3555.000000\" width=\"150.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2441.000000\" y=\"3593.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">RequestBody</text></g><g id=\"org.springframework.web.bind.annotation.RestController\"><g class=\"shape\" ><rect x=\"2536.000000\" y=\"3555.000000\" width=\"178.000000\" height=\"66.000000\" rx=\"33.000000\" fill=\"#717D86\" class=\" stroke-B1\" style=\"stroke-width:2;\" /></g><text x=\"2625.000000\" y=\"3593.500000\" class=\"text-mono-bold fill-N1\" style=\"text-anchor:middle;font-size:16px\">RestController</text></g><g id=\"com.myhome.(controllers.UserController -&gt; api.UsersApi)[0]\"><marker id=\"mk-558834944\" markerWidth=\"10.000000\" markerHeight=\"12.000000\" refX=\"7.000000\" refY=\"6.000000\" viewBox=\"0.000000 0.000000 10.000000 12.000000\" orient=\"auto\" markerUnits=\"userSpaceOnUse\"> <polygon points=\"0.000000,0.000000 10.000000,6.000000 0.000000,12.000000\" fill=\"#26de81\" class=\"connection\" stroke-width=\"2\" /> </marker><path d=\"M 2106.125000 364.000000 L 2106.125000 993.000000 S 2106.125000 1003.000000 2096.125000 1003.000000 L 1938.375000 1003.000000 S 1928.375000 1003.000000 1928.375000 1013.000000 L 1928.375000 2534.000000 S 1928.375000 2544.000000 1938.375000 2544.000000 L 1981.750000 2544.000000 S 1991.750000 2544.000000 1991.750000 2554.000000 L 1991.750000 2635.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"2026.000000\" y=\"2629.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(UserController -&gt; dto.UserDto)[0]\"><path d=\"M 2481.125000 364.000000 L 2481.125000 1493.000000 S 2481.125000 1503.000000 2471.125000 1503.000000 L 2335.125000 1503.000000 S 2325.125000 1503.000000 2325.125000 1513.000000 L 2325.125000 1600.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"2359.000000\" y=\"1593.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(UserController -&gt; dto.mapper.HouseMemberMapper)[0]\"><path d=\"M 2518.625000 364.000000 L 2518.625000 1650.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"2553.000000\" y=\"1643.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(UserController -&gt; mapper.UserApiMapper)[0]\"><path d=\"M 2593.625000 364.000000 L 2593.625000 643.000000 S 2593.625000 653.000000 2603.625000 653.000000 L 2963.125000 653.000000 S 2973.125000 653.000000 2973.125000 663.000000 L 2973.125000 1595.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"3007.000000\" y=\"1588.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.UserController -&gt; domain.PasswordActionType)[0]\"><path d=\"M 2143.625000 364.000000 L 2143.625000 1043.000000 S 2143.625000 1053.000000 2133.625000 1053.000000 L 1968.125000 1053.000000 S 1958.125000 1053.000000 1958.125000 1063.000000 L 1958.125000 2484.000000 S 1958.125000 2494.000000 1968.125000 2494.000000 L 2270.250000 2494.000000 S 2280.250000 2494.000000 2280.250000 2504.000000 L 2280.250000 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"2314.000000\" y=\"2629.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.UserController -&gt; domain.User)[0]\"><path d=\"M 2181.125000 364.000000 L 2181.125000 1093.000000 S 2181.125000 1103.000000 2171.125000 1103.000000 L 2005.625000 1103.000000 S 1995.625000 1103.000000 1995.625000 1113.000000 L 1995.625000 2434.000000 S 1995.625000 2444.000000 2005.625000 2444.000000 L 2439.750000 2444.000000 S 2449.750000 2444.000000 2449.750000 2454.000000 L 2449.750000 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"2484.000000\" y=\"2629.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.UserController -&gt; model.CreateUserRequest)[0]\"><path d=\"M 2218.625000 364.000000 L 2218.625000 1143.000000 S 2218.625000 1153.000000 2208.625000 1153.000000 L 2043.125000 1153.000000 S 2033.125000 1153.000000 2033.125000 1163.000000 L 2033.125000 2384.000000 S 2033.125000 2394.000000 2043.125000 2394.000000 L 2704.750000 2394.000000 S 2714.750000 2394.000000 2714.750000 2404.000000 L 2714.750000 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"2749.000000\" y=\"2629.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(UserController -&gt; response.CreateUserResponse)[0]\"><path d=\"M 2631.125000 364.000000 L 2631.125000 593.000000 S 2631.125000 603.000000 2641.125000 603.000000 L 3240.291016 603.000000 S 3250.291016 603.000000 3250.291016 613.000000 L 3250.291016 1595.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"3284.000000\" y=\"1588.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(UserController -&gt; request.ForgotPasswordRequest)[0]\"><path d=\"M 2706.125000 364.000000 L 2706.125000 493.000000 S 2706.125000 503.000000 2716.125000 503.000000 L 3628.125000 503.000000 S 3638.125000 503.000000 3638.125000 513.000000 L 3638.125000 1595.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"3672.000000\" y=\"1588.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.UserController -&gt; model.GetUserDetailsResponse)[0]\"><path d=\"M 2256.125000 364.000000 L 2256.125000 1193.000000 S 2256.125000 1203.000000 2246.125000 1203.000000 L 2067.375000 1203.000000 S 2057.375000 1203.000000 2057.375000 1213.000000 L 2057.375000 2334.000000 S 2057.375000 2344.000000 2067.375000 2344.000000 L 2914.083008 2344.000000 S 2924.083008 2344.000000 2924.083008 2354.000000 L 2924.083008 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"2958.000000\" y=\"2629.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.UserController -&gt; model.GetUserDetailsResponseUser)[0]\"><path d=\"M 2331.125000 364.000000 L 2331.125000 1293.000000 S 2331.125000 1303.000000 2321.125000 1303.000000 L 2115.875000 1303.000000 S 2105.875000 1303.000000 2105.875000 1313.000000 L 2105.875000 2234.000000 S 2105.875000 2244.000000 2115.875000 2244.000000 L 3202.750000 2244.000000 S 3212.750000 2244.000000 3212.750000 2254.000000 L 3212.750000 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"3247.000000\" y=\"2629.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.UserController -&gt; model.ListHouseMembersResponse)[0]\"><path d=\"M 2443.625000 364.000000 L 2443.625000 1443.000000 S 2443.625000 1453.000000 2433.625000 1453.000000 L 2188.625000 1453.000000 S 2178.625000 1453.000000 2178.625000 1463.000000 L 2178.625000 2084.000000 S 2178.625000 2094.000000 2188.625000 2094.000000 L 3601.416016 2094.000000 S 3611.416016 2094.000000 3611.416016 2104.000000 L 3611.416016 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"3645.000000\" y=\"2629.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.UserController -&gt; services.HouseService)[0]\"><path d=\"M 2556.125000 364.000000 L 2556.125000 693.000000 S 2556.125000 703.000000 2566.125000 703.000000 L 2787.625000 703.000000 S 2797.625000 703.000000 2797.625000 713.000000 L 2797.625000 2034.000000 S 2797.625000 2044.000000 2807.625000 2044.000000 L 3892.250000 2044.000000 S 3902.250000 2044.000000 3902.250000 2054.000000 L 3902.250000 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"3936.000000\" y=\"2629.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.(controllers.UserController -&gt; services.UserService)[0]\"><path d=\"M 2781.125000 364.000000 L 2781.125000 393.000000 S 2781.125000 403.000000 2791.125000 403.000000 L 4066.250000 403.000000 S 4076.250000 403.000000 4076.250000 413.000000 L 4076.250000 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"4110.000000\" y=\"2629.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; java.util.HashSet)[0]\"><path d=\"M 1637.375000 364.000000 L 1637.375000 2980.000000 S 1637.375000 2990.000000 1627.375000 2990.000000 L 217.500000 2990.000000 S 207.500000 2990.000000 207.500000 3000.000000 L 207.500000 3386.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"242.000000\" y=\"3380.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; java.util.Optional)[0]\"><path d=\"M 1661.625000 364.000000 L 1661.625000 3030.000000 S 1661.625000 3040.000000 1651.625000 3040.000000 L 354.000000 3040.000000 S 344.000000 3040.000000 344.000000 3050.000000 L 344.000000 3386.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"378.000000\" y=\"3380.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; java.util.Set)[0]\"><path d=\"M 1685.875000 364.000000 L 1685.875000 3080.000000 S 1685.875000 3090.000000 1675.875000 3090.000000 L 472.000000 3090.000000 S 462.000000 3090.000000 462.000000 3100.000000 L 462.000000 3386.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"496.000000\" y=\"3380.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; javax.validation.Valid)[0]\"><path d=\"M 2031.125000 364.000000 L 2031.125000 893.000000 S 2031.125000 903.000000 2021.125000 903.000000 L 1889.875000 903.000000 S 1879.875000 903.000000 1879.875000 913.000000 L 1879.875000 2384.000000 S 1879.875000 2394.000000 1869.875000 2394.000000 L 1833.125000 2394.000000 S 1823.125000 2394.000000 1823.125000 2404.000000 L 1823.125000 3030.000000 S 1823.125000 3040.000000 1833.125000 3040.000000 L 3120.500000 3040.000000 S 3130.500000 3040.000000 3130.500000 3050.000000 L 3130.500000 3391.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"3165.000000\" y=\"3385.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; lombok.RequiredArgsConstructor)[0]\"><path d=\"M 1710.125000 364.000000 L 1710.125000 2038.812500 C 1710.125000 2049.187500 1699.750000 2038.812500 1699.750000 2049.187500 L 1699.750000 3130.000000 S 1699.750000 3140.000000 1689.750000 3140.000000 L 811.500000 3140.000000 S 801.500000 3140.000000 801.500000 3150.000000 L 801.500000 3336.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"836.000000\" y=\"3330.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; lombok.extern.slf4j.Slf4j)[0]\"><path d=\"M 1734.375000 364.000000 L 1734.375000 2085.500000 C 1734.375000 2102.500000 1717.375000 2085.500000 1717.375000 2102.500000 L 1717.375000 3180.000000 S 1717.375000 3190.000000 1707.375000 3190.000000 L 1110.000000 3190.000000 S 1100.000000 3190.000000 1100.000000 3200.000000 L 1100.000000 3441.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"1134.000000\" y=\"3435.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; org.springframework.data.domain.Pageable)[0]\"><path d=\"M 1758.625000 364.000000 L 1758.625000 2134.000000 S 1758.625000 2144.000000 1748.625000 2144.000000 L 1745.000000 2144.000000 S 1735.000000 2144.000000 1735.000000 2154.000000 L 1735.000000 3230.000000 S 1735.000000 3240.000000 1725.000000 3240.000000 L 1586.500000 3240.000000 S 1576.500000 3240.000000 1576.500000 3250.000000 L 1576.500000 3545.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"1611.000000\" y=\"3538.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; org.springframework.http.HttpStatus)[0]\"><path d=\"M 1782.875000 364.000000 L 1782.875000 2184.000000 S 1782.875000 2194.000000 1772.875000 2194.000000 L 1762.625000 2194.000000 S 1752.625000 2194.000000 1752.625000 2204.000000 L 1752.625000 3230.000000 S 1752.625000 3240.000000 1762.625000 3240.000000 L 1867.000000 3240.000000 S 1877.000000 3240.000000 1877.000000 3250.000000 L 1877.000000 3441.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"1911.000000\" y=\"3435.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; org.springframework.http.ResponseEntity)[0]\"><path d=\"M 1807.125000 364.000000 L 1807.125000 2234.000000 S 1807.125000 2244.000000 1797.125000 2244.000000 L 1780.250000 2244.000000 S 1770.250000 2244.000000 1770.250000 2254.000000 L 1770.250000 3180.000000 S 1770.250000 3190.000000 1780.250000 3190.000000 L 2046.500000 3190.000000 S 2056.500000 3190.000000 2056.500000 3200.000000 L 2056.500000 3441.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"2091.000000\" y=\"3435.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; org.springframework.web.bind.annotation.RequestBody)[0]\"><path d=\"M 1831.375000 364.000000 L 1831.375000 2284.000000 S 1831.375000 2294.000000 1821.375000 2294.000000 L 1797.875000 2294.000000 S 1787.875000 2294.000000 1787.875000 2304.000000 L 1787.875000 3130.000000 S 1787.875000 3140.000000 1797.875000 3140.000000 L 2431.000000 3140.000000 S 2441.000000 3140.000000 2441.000000 3150.000000 L 2441.000000 3551.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"2475.000000\" y=\"3545.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; org.springframework.web.bind.annotation.RestController)[0]\"><path d=\"M 1855.625000 364.000000 L 1855.625000 2334.000000 S 1855.625000 2344.000000 1845.625000 2344.000000 L 1815.500000 2344.000000 S 1805.500000 2344.000000 1805.500000 2354.000000 L 1805.500000 3080.000000 S 1805.500000 3090.000000 1815.500000 3090.000000 L 2615.000000 3090.000000 S 2625.000000 3090.000000 2625.000000 3100.000000 L 2625.000000 3551.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"2659.000000\" y=\"3545.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"(com.myhome.controllers.UserController -&gt; javax.validation.constraints.NotNull)[0]\"><path d=\"M 2068.625000 364.000000 L 2068.625000 943.000000 S 2068.625000 953.000000 2058.625000 953.000000 L 1914.125000 953.000000 S 1904.125000 953.000000 1904.125000 963.000000 L 1904.125000 2434.000000 S 1904.125000 2444.000000 1894.125000 2444.000000 L 1850.750000 2444.000000 S 1840.750000 2444.000000 1840.750000 2454.000000 L 1840.750000 2980.000000 S 1840.750000 2990.000000 1850.750000 2990.000000 L 3292.500000 2990.000000 S 3302.500000 2990.000000 3302.500000 3000.000000 L 3302.500000 3441.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;stroke-dasharray:6.000000,5.919384;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /><text x=\"3337.000000\" y=\"3435.000000\" class=\"text-italic fill-N1\" style=\"text-anchor:middle;font-size:16px\">imports</text></g><g id=\"com.myhome.controllers.(UserController -&gt; response.CreateUserResponse)[1]\"><path d=\"M 2668.625000 364.000000 L 2668.625000 543.000000 S 2668.625000 553.000000 2678.625000 553.000000 L 3312.958008 553.000000 S 3322.958008 553.000000 3322.958008 563.000000 L 3322.958008 1595.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /></g><g id=\"com.myhome.(controllers.UserController -&gt; model.GetUserDetailsResponse)[1]\"><path d=\"M 2293.625000 364.000000 L 2293.625000 1243.000000 S 2293.625000 1253.000000 2283.625000 1253.000000 L 2091.625000 1253.000000 S 2081.625000 1253.000000 2081.625000 1263.000000 L 2081.625000 2284.000000 S 2081.625000 2294.000000 2091.625000 2294.000000 L 2999.416016 2294.000000 S 3009.416016 2294.000000 3009.416016 2304.000000 L 3009.416016 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /></g><g id=\"com.myhome.(controllers.UserController -&gt; model.GetUserDetailsResponseUser)[1]\"><path d=\"M 2368.625000 364.000000 L 2368.625000 1343.000000 S 2368.625000 1353.000000 2358.625000 1353.000000 L 2140.125000 1353.000000 S 2130.125000 1353.000000 2130.125000 1363.000000 L 2130.125000 2184.000000 S 2130.125000 2194.000000 2140.125000 2194.000000 L 3300.750000 2194.000000 S 3310.750000 2194.000000 3310.750000 2204.000000 L 3310.750000 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /></g><g id=\"com.myhome.(controllers.UserController -&gt; model.ListHouseMembersResponse)[1]\"><path d=\"M 2406.125000 364.000000 L 2406.125000 1393.000000 S 2406.125000 1403.000000 2396.125000 1403.000000 L 2164.375000 1403.000000 S 2154.375000 1403.000000 2154.375000 1413.000000 L 2154.375000 2134.000000 S 2154.375000 2144.000000 2164.375000 2144.000000 L 3510.083008 2144.000000 S 3520.083008 2144.000000 3520.083008 2154.000000 L 3520.083008 2636.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /></g><g id=\"com.myhome.controllers.(request.ForgotPasswordRequest -&gt; UserController)[0]\"><path d=\"M 3638.125000 1665.000000 L 3638.125000 1849.000000 S 3638.125000 1859.000000 3648.125000 1859.000000 L 3840.625000 1859.000000 S 3850.625000 1859.000000 3850.625000 1849.000000 L 3850.625000 463.000000 S 3850.625000 453.000000 3840.625000 453.000000 L 2753.625000 453.000000 S 2743.625000 453.000000 2743.625000 443.000000 L 2743.625000 366.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /></g><g id=\"com.myhome.(model.CreateUserRequest -&gt; controllers.UserController)[0]\"><path d=\"M 2714.750000 2706.000000 L 2714.750000 2790.000000 S 2714.750000 2800.000000 2724.750000 2800.000000 L 4230.750000 2800.000000 S 4240.750000 2800.000000 4240.750000 2790.000000 L 4240.750000 212.000000 S 4240.750000 202.000000 4230.750000 202.000000 L 2428.625000 202.000000 S 2418.625000 202.000000 2418.625000 212.000000 L 2418.625000 294.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /></g><g id=\"(org.springframework.data.domain.Pageable -&gt; com.myhome.controllers.UserController)[0]\"><path d=\"M 1576.500000 3614.000000 L 1576.500000 3911.000000 S 1576.500000 3921.000000 1566.500000 3921.000000 L 22.000000 3921.000000 S 12.000000 3921.000000 12.000000 3911.000000 L 12.000000 22.000000 S 12.000000 12.000000 22.000000 12.000000 L 2008.625000 12.000000 S 2018.625000 12.000000 2018.625000 22.000000 L 2018.625000 294.000000\" stroke=\"#26de81\" fill=\"none\" class=\"connection\" style=\"stroke-width:2;\" marker-end=\"url(#mk-558834944)\" mask=\"url(#d2-1487222559)\" /></g><mask id=\"d2-1487222559\" maskUnits=\"userSpaceOnUse\" x=\"11\" y=\"11\" width=\"4331\" height=\"3911\">\n<rect x=\"11\" y=\"11\" width=\"4331\" height=\"3911\" fill=\"white\"></rect>\n<rect x=\"2880.000000\" y=\"62.000000\" width=\"49\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"300.500000\" y=\"3290.000000\" width=\"50\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3214.000000\" y=\"3290.000000\" width=\"64\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"913.000000\" y=\"3290.000000\" width=\"89\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2121.000000\" y=\"3290.000000\" width=\"38\" height=\"36\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2860.500000\" y=\"117.000000\" width=\"88\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"309.000000\" y=\"3345.000000\" width=\"33\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3196.000000\" y=\"3345.000000\" width=\"100\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"691.500000\" y=\"3362.500000\" width=\"220\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1069.000000\" y=\"3345.000000\" width=\"62\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2053.500000\" y=\"3345.000000\" width=\"173\" height=\"31\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2694.000000\" y=\"252.000000\" width=\"91\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1978.500000\" y=\"2594.000000\" width=\"25\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2298.500000\" y=\"2594.000000\" width=\"64\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3129.500000\" y=\"2594.000000\" width=\"53\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3952.500000\" y=\"2594.000000\" width=\"67\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"174.500000\" y=\"3412.500000\" width=\"66\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"305.500000\" y=\"3412.500000\" width=\"77\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"447.500000\" y=\"3412.500000\" width=\"29\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3106.500000\" y=\"3417.500000\" width=\"48\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1083.000000\" y=\"3400.000000\" width=\"34\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1558.000000\" y=\"3447.000000\" width=\"37\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1959.000000\" y=\"3400.000000\" width=\"35\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2522.000000\" y=\"3400.000000\" width=\"36\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3255.500000\" y=\"3400.000000\" width=\"94\" height=\"26\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2151.500000\" y=\"319.500000\" width=\"133\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1953.500000\" y=\"2661.500000\" width=\"75\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2476.500000\" y=\"1553.000000\" width=\"23\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2946.000000\" y=\"1553.000000\" width=\"53\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2193.500000\" y=\"2661.500000\" width=\"172\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2430.500000\" y=\"2661.500000\" width=\"37\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2632.500000\" y=\"2661.500000\" width=\"163\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3255.500000\" y=\"1553.000000\" width=\"61\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3612.000000\" y=\"1553.000000\" width=\"51\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2860.500000\" y=\"2661.500000\" width=\"211\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3136.500000\" y=\"2661.500000\" width=\"249\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3450.500000\" y=\"2661.500000\" width=\"229\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3844.500000\" y=\"2661.500000\" width=\"114\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"4023.500000\" y=\"2661.500000\" width=\"104\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1076.500000\" y=\"3467.500000\" width=\"47\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1551.000000\" y=\"3502.000000\" width=\"51\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1829.500000\" y=\"3467.500000\" width=\"95\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1989.500000\" y=\"3467.500000\" width=\"134\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2525.500000\" y=\"3455.000000\" width=\"29\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3269.500000\" y=\"3467.500000\" width=\"66\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2291.500000\" y=\"1625.500000\" width=\"66\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2527.000000\" y=\"1608.000000\" width=\"53\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2910.500000\" y=\"1620.500000\" width=\"124\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3199.500000\" y=\"1620.500000\" width=\"173\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"3537.500000\" y=\"1620.500000\" width=\"200\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"1538.500000\" y=\"3569.500000\" width=\"76\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2503.000000\" y=\"3510.000000\" width=\"74\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2472.500000\" y=\"1675.500000\" width=\"162\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2388.500000\" y=\"3577.500000\" width=\"105\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n<rect x=\"2558.500000\" y=\"3577.500000\" width=\"133\" height=\"21\" fill=\"rgba(0,0,0,0.75)\"></rect>\n</mask></svg></svg>\n",
          "d2_src": "direction: down\n\nvars: {\n  d2-config: {\n    pad: 0\n    theme-overrides: {\n      B1: \"#717D86\"\n      B2: \"#717D86\"\n      B3: \"#ffff00\"\n      B4: \"#151719\"\n      B5: \"#151719\"\n      B6: \"#151719\"\n      N1: \"#ECEDED\"\n      N7: \"#151719\"\n      AA2: \"#ECEDED\"\n    }\n  }\n}\n\nstyle: {\n  fill: \"#151719\"\n}\ncom.myhome.controllers.UserController -> com.myhome.api.UsersApi: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.controllers.dto.UserDto: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.controllers.dto.mapper.HouseMemberMapper: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.controllers.mapper.UserApiMapper: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.domain.PasswordActionType: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.domain.User: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.model.CreateUserRequest: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.controllers.response.CreateUserResponse: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.controllers.request.ForgotPasswordRequest: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.model.GetUserDetailsResponse: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.model.GetUserDetailsResponseUser: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.model.ListHouseMembersResponse: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.services.HouseService: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.services.UserService: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> java.util.HashSet: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> java.util.Optional: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> java.util.Set: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> javax.validation.Valid: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> lombok.RequiredArgsConstructor: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> lombok.extern.slf4j.Slf4j: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> org.springframework.data.domain.Pageable: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> org.springframework.http.HttpStatus: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> org.springframework.http.ResponseEntity: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> org.springframework.web.bind.annotation.RequestBody: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> org.springframework.web.bind.annotation.RestController: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> javax.validation.constraints.NotNull: {\n  target-arrowhead: \"imports\"\n  style: {\n    stroke: \"#26de81\"\n    stroke-dash: 3\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.controllers.response.CreateUserResponse: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.model.GetUserDetailsResponse: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.model.GetUserDetailsResponseUser: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\ncom.myhome.controllers.UserController -> com.myhome.model.ListHouseMembersResponse: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\ncom.myhome.controllers.request.ForgotPasswordRequest -> com.myhome.controllers.UserController: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\ncom.myhome.model.CreateUserRequest -> com.myhome.controllers.UserController: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\norg.springframework.data.domain.Pageable -> com.myhome.controllers.UserController: {\n  style: {\n    stroke: \"#26de81\"\n  }\n}\n\norg.springframework.web.bind.annotation.RequestBody: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nlombok.extern.slf4j.Slf4j: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\ncom.myhome.model.GetUserDetailsResponseUser: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\ncom.myhome.model.ListHouseMembersResponse: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\ncom.myhome.api.UsersApi: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.util.Set: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.util.HashSet: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.springframework.http.HttpStatus: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\ncom.myhome.model.CreateUserRequest: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njavax.validation.Valid: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njavax.validation.constraints.NotNull: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.springframework.http.ResponseEntity: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\nlombok.RequiredArgsConstructor: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.springframework.data.domain.Pageable: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\njava.util.Optional: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\ncom.myhome.model.GetUserDetailsResponse: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\norg.springframework.web.bind.annotation.RestController: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    border-radius: 100\n  }\n}\n\ncom.myhome.controllers.request.ForgotPasswordRequest: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.services.UserService: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.controllers.response.CreateUserResponse: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.model.GetUserDetailsResponse: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.model.CreateUserRequest: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.model.GetUserDetailsResponseUser: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.controllers.UserController: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.domain.User: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\norg.springframework.data.domain.Pageable: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.controllers.dto.UserDto: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.controllers.dto.mapper.HouseMemberMapper: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.domain.PasswordActionType: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.model.ListHouseMembersResponse: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.controllers.mapper.UserApiMapper: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.services.HouseService: {\n  style: {\n    font: mono\n    fill: \"#717D86\"\n    stroke-width: 0\n  }\n}\n\ncom.myhome.controllers.UserController: {\n  style: {\n    fill: \"#26de81\"\n    font-color: \"#151719\"\n    stroke-width: 0\n  }\n}\n"
        },
        "items": [
          {
            "id": "5cc5d870-3349-b68b-f243-eb1e79d38566",
            "ancestors": [],
            "description": "Implements the UsersApi interface and provides CRUD operations for users. It handles user registration, listing all users, retrieving user details by ID, resetting passwords, confirming email addresses, and resending confirmation emails.",
            "name": "UserController",
            "location": {
              "start": 50,
              "insert": 47,
              "offset": " ",
              "indent": 0,
              "comment": {
                "start": 46,
                "end": 49
              }
            },
            "item_type": "class",
            "length": 96,
            "docLength": 3
          },
          {
            "id": "c64a412e-89c5-45b8-e54b-287e19af916e",
            "ancestors": [
              "5cc5d870-3349-b68b-f243-eb1e79d38566"
            ],
            "description": "Processes a user registration request, maps it to a UserDto, creates a new user using the userService, and returns a response indicating the result of the operation. A successful creation returns a CreateUserResponse with a 201 status code; an error results in a 409 conflict status code.",
            "params": [
              {
                "name": "request",
                "type_name": "CreateUserRequest",
                "description": "validated user creation request object, which is expected to be of type `CreateUserRequest`.\n\nContains a valid instance of type `CreateUserRequest`.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "ResponseEntity",
              "description": "a ResponseEntity with a CreateUserResponse and HTTP status code.\n\n",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "CreateUserRequest request = new CreateUserRequest(\"username\", \"password\", \"email\");\nResponseEntity<CreateUserResponse> response = userController.signUp(request);\n",
              "description": "\nThis example creates a CreateUserRequest object and then calls the signUp method with this object as a parameter."
            },
            "name": "signUp",
            "location": {
              "start": 60,
              "insert": 60,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 12,
            "docLength": null
          },
          {
            "id": "664a04b4-e598-92b4-d942-d201bf26aaec",
            "ancestors": [
              "5cc5d870-3349-b68b-f243-eb1e79d38566"
            ],
            "description": "Retrieves a list of users based on the provided page parameters and maps the results to a response object. It handles the request, retrieves user details, converts them into a REST API response, and returns the response with a status code indicating success.",
            "params": [
              {
                "name": "pageable",
                "type_name": "Pageable",
                "description": "pagination details, such as the page number and size, which are used to retrieve a subset of users from the database.\n\nSort - specifies the sort criteria for pagination; Offset - denotes the starting index for pagination; and Limit - defines the maximum number of records to be retrieved.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "ResponseEntity",
              "description": "a ResponseEntity containing a GetUserDetailsResponse object.\n\nThe response is a ResponseEntity object with a status code of 200 (OK) and a body containing a GetUserDetailsResponse object. This GetUserDetailsResponse object has a set of GetUserDetailsResponseUser objects representing the list of users in JSON format.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "Pageable pageable = PageRequest.of(0, 10);\nResponseEntity<GetUserDetailsResponse> response = userController.listAllUsers(pageable);",
              "description": ""
            },
            "name": "listAllUsers",
            "location": {
              "start": 73,
              "insert": 73,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 13,
            "docLength": null
          },
          {
            "id": "b29937e6-860d-9f9b-db45-4c3c54abb9c9",
            "ancestors": [
              "5cc5d870-3349-b68b-f243-eb1e79d38566"
            ],
            "description": "Retrieves user details based on a provided ID, logs a trace message and returns a response entity containing the details. If no matching user is found, it returns a 404 status code.",
            "params": [
              {
                "name": "userId",
                "type_name": "String",
                "description": "identifier of the user for which details are requested, serving as an argument to retrieve and return relevant information.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "ResponseEntity",
              "description": "a response entity containing user details.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "ResponseEntity<GetUserDetailsResponseUser> response = userController.getUserDetails(\"12345\");",
              "description": ""
            },
            "name": "getUserDetails",
            "location": {
              "start": 87,
              "insert": 87,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 9,
            "docLength": null
          },
          {
            "id": "04eeb482-53ee-61b0-7343-4a6113aafee5",
            "ancestors": [
              "5cc5d870-3349-b68b-f243-eb1e79d38566"
            ],
            "description": "Handles password-related actions for users, accepting a request body containing a forgotten or reset password action. It uses a `UserService` to validate and process the request, returning a successful response if the action is completed, and an error response otherwise.",
            "params": [
              {
                "name": "action",
                "type_name": "String",
                "description": "type of password action, either FORGOT or RESET, and is used to determine the subsequent operation on the user's password.",
                "complex_type": false
              },
              {
                "name": "forgotPasswordRequest",
                "type_name": "ForgotPasswordRequest",
                "description": "request for password reset or forgotten password, which is validated and processed based on the specified action type.\n\n- The `forgotPasswordRequest` contains an email address and a password reset token.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "ResponseEntityVoid",
              "description": "a ResponseEntity with a status code of OK or BAD_REQUEST.\n\nReturns a ResponseEntity object with Void type content, which represents an empty response body. The response status is either \"OK\" (200) or \"Bad Request\" (400), depending on whether the password action is successful or not.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "UserController userController = new UserController(userService, userApiMapper, houseService, houseMemberMapper);\n\nString action = \"FORGOT\";\nForgotPasswordRequest forgotPasswordRequest = new ForgotPasswordRequest(\"user123\", \"email@example.com\");\n\nResponseEntity<Void> response = userController.usersPasswordPost(action, forgotPasswordRequest);\n",
              "description": ""
            },
            "name": "usersPasswordPost",
            "location": {
              "start": 97,
              "insert": 97,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 16,
            "docLength": null
          },
          {
            "id": "1feae110-6dee-70b0-b946-657cee38af67",
            "ancestors": [
              "5cc5d870-3349-b68b-f243-eb1e79d38566"
            ],
            "description": "Retrieves a list of all members from all houses associated with a specified user ID, paginates the result using `Pageable`, and returns it as a response entity.",
            "params": [
              {
                "name": "userId",
                "type_name": "String",
                "description": "identifier of the user for whom the list of all members from their houses is requested.",
                "complex_type": false
              },
              {
                "name": "pageable",
                "type_name": "Pageable",
                "description": "criteria for pagination, allowing the function to retrieve and return a subset of data according to specified page number and size.\n\nSort - The direction and property to sort the results; Size - The number of items to return in a single response; Number - The page number for which data is required.",
                "complex_type": true
              }
            ],
            "returns": {
              "type_name": "ResponseEntityListHouseMembersResponse",
              "description": "a ResponseEntity containing a List of House Members.\n\nReturns a ResponseEntity containing a ListHouseMembersResponse with members property.",
              "complex_type": true
            },
            "usage": {
              "language": "java",
              "code": "ResponseEntity<ListHouseMembersResponse> response = userController.listAllHousemates(\"12345\", Pageable.ofSize(10));",
              "description": ""
            },
            "name": "listAllHousemates",
            "location": {
              "start": 114,
              "insert": 114,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 11,
            "docLength": null
          },
          {
            "id": "254e220d-fe25-6cba-2e44-d0e35417cdb0",
            "ancestors": [
              "5cc5d870-3349-b68b-f243-eb1e79d38566"
            ],
            "description": "Verifies whether an email confirmation token is valid for a given user ID. If the token is valid, it returns a successful response; otherwise, it returns a bad request response.",
            "params": [
              {
                "name": "userId",
                "type_name": "String",
                "description": "unique identifier of the user, used to verify their email confirmation with the provided token.",
                "complex_type": false
              },
              {
                "name": "emailConfirmToken",
                "type_name": "String",
                "description": "verification token for the email confirmation process, used by the `userService.confirmEmail()` method to verify whether the provided token is valid.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "ResponseEntityVoid",
              "description": "either an OK response or a bad request response.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "UserController userController = new UserController();\nResponseEntity<Void> response = userController.confirmEmail(\"user123\", \"emailConfirmToken\");\n",
              "description": "\nNote: In a real-world scenario, you would not create an instance of the `UserController` manually. Instead, you would use dependency injection or a web framework's built-in support for creating and configuring controllers."
            },
            "name": "confirmEmail",
            "location": {
              "start": 126,
              "insert": 126,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 9,
            "docLength": null
          },
          {
            "id": "d8ee490c-efc5-23af-d04e-4bda6a7a28ee",
            "ancestors": [
              "5cc5d870-3349-b68b-f243-eb1e79d38566"
            ],
            "description": "Sends a confirmation email to a user with a specified ID. It calls the `userService` to resend the email and returns a response based on the result: OK if the resend is successful, or BAD REQUEST if it fails.",
            "params": [
              {
                "name": "userId",
                "type_name": "String",
                "description": "identifier of the user for whom an email confirmation needs to be resent.",
                "complex_type": false
              }
            ],
            "returns": {
              "type_name": "ResponseEntityVoid",
              "description": "a ResponseEntity with either OK or BAD_REQUEST status.",
              "complex_type": false
            },
            "usage": {
              "language": "java",
              "code": "String userId = \"someUserId\";\nResponseEntity<Void> response = userController.resendConfirmEmailMail(userId);\n",
              "description": "\n\nNote: This example assumes that the `userController` instance has been created and initialized correctly."
            },
            "name": "resendConfirmEmailMail",
            "location": {
              "start": 136,
              "insert": 136,
              "offset": " ",
              "indent": 2,
              "comment": null
            },
            "item_type": "method",
            "length": 9,
            "docLength": null
          }
        ]
      }
    }
  }
]